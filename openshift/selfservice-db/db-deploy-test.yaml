---
kind: Template
apiVersion: v1
metadata:
  annotations:
    description: Deployment template for a postgresql server with ephemeral storage.
    tags: "${DB_NAME}"
  name: "${DB_NAME}-ephemeral-template"
objects:
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${DB_NAME}"
    generation: 1
    labels:
      app: "${DB_NAME}-ephemeral"
      template: "${DB_NAME}-ephemeral-template"
      app-group: "${APP_GROUP}"
  spec:
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      activeDeadlineSeconds: 21600
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - "${DB_NAME}"
        from:
          kind: ImageStreamTag
          namespace: "${IMAGE_NAMESPACE}"
          name: "${SOURCE_IMAGE_NAME}:${TAG_NAME}"
    - type: ConfigChange
    replicas: 1
    test: false
    selector:
      name: "${DB_NAME}"
    template:
      metadata:
        labels:
          name: "${DB_NAME}"
      spec:
        containers:
        - name: "${DB_NAME}"
          image: " "
          ports:
          - containerPort: 5432
            protocol: TCP
          env:
          - name: POSTGRESQL_USER
            valueFrom:
              configMapKeyRef:
                name: "${DB_NAME}-${TAG_NAME}-config"
                key: DATABASE_USERNAME
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "${DB_NAME}-${TAG_NAME}-secret"
                key: DATABASE_PASSWORD
          - name: POSTGRESQL_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "${DB_NAME}-${TAG_NAME}-secret"
                key: ADMIN_PASSWORD
          - name: POSTGRESQL_DATABASE
            valueFrom:
              configMapKeyRef:
                name: "${DB_NAME}-${TAG_NAME}-config"
                key: DATABASE_NAME
          resources:
            requests:
              cpu: "${CPU_REQUEST}"
              memory: "${MEMORY_REQUEST}"
            limits:
              cpu: "${CPU_LIMIT}"
              memory: "${MEMORY_LIMIT}"
          livenessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
              - "/bin/sh"
              - "-i"
              - "-c"
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: "/dev/termination-log"
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities: {}
            privileged: false
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler
- kind: Service
  apiVersion: v1
  metadata:
    name: "${DB_NAME}"
    labels:
      app: "${DB_NAME}-persistent"
      template: "${DB_NAME}-persistent-template"
      app-group: "${APP_GROUP}"
    annotations:
      template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
  spec:
    ports:
    - name: postgresql
      protocol: TCP
      port: 5432
      targetPort: 5432
    selector:
      name: "${DB_NAME}"
    type: ClusterIP
    hostname: "${DB_NAME}.svc.cluster.local"
parameters:
- name: DB_NAME
  displayName: Name
  description: The name assigned to all of the OpenShift resources associated to the
    server instance.
  required: true
  value: selfservice-db
- name: APP_GROUP
  displayName: App Group
  description: The name assigned to all of the deployments in this project.
  required: true
  value: BC-ServiceCard
- name: IMAGE_NAMESPACE
  displayName: Image Namespace
  required: true
  description: The namespace of the OpenShift project containing the imagestream for
    the application.
  value: oultzp-tools
- name: SOURCE_IMAGE_NAME
  displayName: Source Image Name
  description: The name of the image to use for this resource.
  required: true
  value: selfservice-db
- name: TAG_NAME
  displayName: Environment TAG name
  description: The TAG name for this environment, e.g., dev, test, prod
  required: true
  value: dev
- name: POSTGRESQL_DATABASE_NAME
  displayName: PostgreSQL Database Name
  description: The name of the PostgreSQL database.
  required: true
  value: postgres
- name: POSTGRESQL_DATABASE
  displayName: PostgreSQL Database Name
  description: The name of the PostgreSQL database.
  required: true
  value: postgres
- name: POSTGRESQL_USER
  displayName: PostgreSQL Connection Username
  description: Username for PostgreSQL user that will be used for accessing the database.  Needs
    to be basee64 encoded/
  required: true
  value: postgres
- name: POSTGRESQL_PASSWORD
  displayName: PostgreSQL Connection Password
  description: Password for the PostgreSQL connection user.  Needs to be basee64 encoded/
  required: true
  value: postgres123
- name: POSTGRESQL_ADMIN_PASSWORD
  displayName: PostgreSQL Admin Password
  description: Password for the 'postgres' PostgreSQL administrative account.  Needs
    to be basee64 encoded.
  required: true
  value: postgres123
- name: MOUNT_PATH
  displayName: Mount Path
  description: The path to mount the persistent volume.
  required: true
  value: "/var/lib/pgsql/data"
- name: PERSISTENT_VOLUME_SIZE
  displayName: Persistent Volume Size
  description: The size of the persistent volume , e.g. 512Mi, 1Gi, 2Gi.
  required: true
  value: 1Gi
- name: PERSISTENT_VOLUME_CLASS
  displayName: Persistent Volume Class name
  description: The class of the volume; gluster-file, gluster-block, gluster-file-db
  required: false
  value: gluster-file-db
- name: CPU_REQUEST
  displayName: Resources CPU Request
  description: The resources CPU request (in cores) for this build.
  required: true
  value: 100m
- name: CPU_LIMIT
  displayName: Resources CPU Limit
  description: The resources CPU limit (in cores) for this build.
  required: true
  value: 750m
- name: MEMORY_REQUEST
  displayName: Resources Memory Request
  description: The resources Memory request (in Mi, Gi, etc) for this build.
  required: true
  value: 100Mi
- name: MEMORY_LIMIT
  displayName: Resources Memory Limit
  description: The resources Memory limit (in Mi, Gi, etc) for this build.
  required: true
  value: 2Gi
- name: DATABASE_HOST
  displayName: Database host name
  description: A valid database host name used by the service.
  required: true
  value: pyvuedb
- name: DATABASE_PORT
  displayName: Database host port
  description: A valid database host port used by the service.
  required: true
  value: '5432'
