// Visit a web page
import "cypress-keycloak-commands";
describe('BC Keycloak Login with BC services Card', function()
{   
    const time_ms = 500
    const url = Cypress.config().baseUrl
    const login_url =Cypress.config().bcscs_login
    it('Visit the BC Dev Page and Login', function(){
        cy.log("Visiting the BC Services Card [DEV] URL")
        cy.visit(url)
        cy.wait(time_ms)
        cy.log("Click to Login")
        cy.contains('Login').click()
        cy.wait(time_ms)
        //For the New url
        cy.log("Should open the login page")
        cy.url().should('include','openid-connect')
        cy.log("Click on BC Services Card Login")
        //Opting for BCSC login
        cy.get('#zocial-bcsc').click()
        cy.wait(time_ms)
        cy.log("Should open the BC Services Card Login Page")
        cy.url().should('eq',login_url+'/entry#start')
        cy.wait(time_ms)
        cy.log("Click on Virtual Card Testing")
        //Click on Virtual Card Testing
        cy.get('#tile_btn_virtual_device_div_id > h2').click()
        cy.wait(time_ms)
        cy.log("Opens up the page with BC Services Card Login details")
        cy.contains('Virtual Card Testing')        
        cy.wait(time_ms)
        //Type the Card serial number and passcode - This needs a Serial card number that has never been used earlier
        cy.get('#csn').type('<Card serial number>').should('have.value', '<Card serial number>')
        cy.wait(time_ms)
        cy.log("Click on Continue to go to next page")
        cy.get('#continue').click()
        cy.wait(time_ms)
        cy.log("Enter Passcode")
        cy.get('#passcode').type('<Passcode>',{ log: false })
        cy.wait(time_ms)
        cy.log("Click Submit")
        cy.get('#btnSubmit').click()
        cy.wait(time_ms)
        cy.log("It should take user to validate page")
        cy.url().should('eq',login_url+'/passcode/validate')
        cy.wait(time_ms)
        cy.log("Shows a disclaimer")
        cy.contains('BC Services Card Self Services for BPS - DEV will receive the following personal identity information')
        cy.wait(time_ms)
        cy.log("Click Submit")
        cy.get('#btnSubmit').click()
        cy.wait(time_ms)
        //If logging in for the first Time
        cy.log("If logging in for the first time, User is asked to complete profile")
        cy.visit(url+'/profile/')  
        cy.get('input[data-test-id="input-profile-email"]').type('<Email@gov.bc.ca>').should('have.value', '<Email@gov.bc.ca>')
        cy.wait(time_ms)
        cy.get('input[data-test-id="input-profile-phone"]').type('<Phone_number>').should('have.value', '<Phone_number>')
        cy.wait(time_ms)
        cy.log("Submit profile details")
        cy.get('[data-test-id="btn-profile-update"]').click()
        cy.wait(time_ms)
        cy.contains('Terms of Use')
        cy.contains('Indemnity')
        cy.contains('General')
        cy.get('[data-test-id="btn-submit-terms-profile"]').should('be.disabled')
        cy.get('#scroll-target').scrollTo('0%','90%')
        cy.wait(time_ms)
        cy.get('[data-test-id="btn-submit-terms-profile"]').should('be.enabled')
        cy.get('[data-test-id="btn-cancel-terms-profile"]').click()
        cy.url().should('eq',url + '/profile/complete')
        cy.visit(url+'/dashboard')
        cy.log("The user is not taken to Dashboard unless User Accepts the Terms of Agreement- Shows Unauthorized Page")
        cy.visit(url + '/profile/complete')
        cy.log("User now accepts terms of use after submitting details again")
        cy.get('input[data-test-id="input-profile-email"]').type('<Email@gov.bc.ca>').should('have.value', '<Email@gov.bc.ca>')
        cy.wait(time_ms)
        cy.get('input[data-test-id="input-profile-phone"]').type('<Phone_number>').should('have.value', '<Phone_number>')
        cy.wait(time_ms)
        cy.get('[data-test-id="btn-profile-update"]').click()
        cy.get('#scroll-target').scrollTo('0%','90%')
        cy.get('[data-test-id="btn-submit-terms-profile"]').should('be.enabled')
        cy.get('[data-test-id="btn-submit-terms-profile"]').click()
        cy.wait(time_ms)
        cy.visit(url+'/dashboard')
        cy.wait(time_ms)
        cy.log("The user is now taken to Dashboard since User has Accepted the Terms of Agreement")
        cy.url().should('include',url+'/dashboard')
        cy.wait(time_ms)
        cy.contains('Projects')
        cy.log("Test Complete")
    })
})