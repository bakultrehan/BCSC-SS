// Visit a web page
import "cypress-keycloak-commands";
describe('BC Keycloak Login with BC services Card', function()
{
    const time_ms = 1000
    const url = Cypress.config().baseUrl
    const login_url =Cypress.config().bcscs_login
    it('Visit the BC Dev Page and Login', function(){
        cy.log("Visiting the BC Services Card [DEV] URL")
        cy.visit(url)
        cy.wait(time_ms)
        cy.log("Click to Login")
        cy.contains('Login').click()
        cy.wait(time_ms)
        //For the New url
        cy.log("Should open the login page")
        cy.url().should('include','openid-connect')
        cy.log("Click on BC Services Card Login")
        //Opting for BCSC login
        cy.get('#zocial-bcsc').click()
        cy.wait(time_ms)
        cy.log("Should open the BC Services Card Login Page")
        cy.url().should('eq',login_url+'/entry#start')
        cy.wait(time_ms)
        cy.log("Click on Virtual Card Testing")
        //Click on Virtual Card Testing
        cy.get('#tile_btn_virtual_device_div_id > h2').click()
        cy.wait(time_ms)
        cy.log("Opens up the page with BC Services Card Login details")
        cy.contains('Virtual Card Testing')        
        cy.wait(time_ms)
        //Type the Card serial number and passcode -this User has already Logged in Earlier and completed profile
        cy.get('#csn').type('<Card serial number>').should('have.value', '<Card serial number>')
        cy.wait(time_ms)
        cy.log("Click on Continue to go to next page")
        cy.get('#continue').click()
        cy.wait(time_ms)
        cy.log("Enter Passcode")
        cy.get('#passcode').type('<Passcode>',{ log: false })
        cy.wait(time_ms)
        cy.log("Click Submit")
        cy.get('#btnSubmit').click()
        cy.wait(time_ms)
        cy.log("It should take user to validate page")
        cy.url().should('eq',login_url+'/passcode/validate')
        cy.wait(time_ms)
        cy.log("Shows a disclaimer")
        cy.contains('BC Services Card Self Services for BPS - DEV will receive the following personal identity information')
        cy.wait(time_ms)
        cy.log("Click Submit")
        cy.get('#btnSubmit').click()
        cy.wait(time_ms)
        cy.visit(url+'/dashboard')
        cy.url().should('include','dashboard')
        //Start a new project
        cy.log("Start a new project")
        cy.wait(time_ms)
        cy.get('[data-test-id="btn-create-project"]').click()
        cy.log("Should direct user to the Project Info page")
        cy.url().should('include',url+'/project/info')
        cy.wait(time_ms)
        //Enter Project Name, Organization and Description
        cy.log("Enter Project Details and Submit")
        cy.get('input[data-test-id="input-org-name"]').type('BCGov').should('have.value', 'BCGov')
        cy.wait(time_ms)
        cy.get('input[data-test-id="input-project-name"]').type('Sample Project').should('have.value', 'Sample Project')
        cy.wait(time_ms)
        cy.get('textarea[data-test-id="text-project-description"]').type('Sample Description of the project').should('have.value', 'Sample Description of the project')
        cy.wait(time_ms)
        cy.get('[data-test-id="btn-submit-project-info"]').click()
        cy.log("Should take user to Team details page")
        cy.url().should('include','/team/')
        cy.wait(time_ms)
        //As of now We can proceed without adding Manager or Sponsor details
        cy.log("Enter Team Details or proceed with just Developer")
        cy.get('[data-test-id="btn-submit-project-team"]').click()
        cy.wait(time_ms)
        cy.log("User id directed to Technical Details page")
        cy.url().should('include','/technical/')
        cy.wait(time_ms)
        // Add The Technical requirement details
        cy.log("Enter Technical Details")
        cy.get('input[data-test-id="input-app-url"]').type('<Homepageurl>').should('have.value', '<Homepageurl>')
        cy.wait(time_ms)
        cy.get('input[data-test-id="input-redirect-url0"]').type('<RedirectUrl>').should('have.value', '<RedirectUrl>')
        cy.wait(time_ms)
        cy.get('[data-test-id="btn-submit-technical-req"]').click()
        cy.wait(time_ms)
        cy.log("User is directed to Package details page")
        // Default package
        cy.url().should('include','/package/')
        cy.wait(time_ms)
        cy.log("Proceed with default selected package")
        cy.get('[data-test-id="btn-submit-package-select"]').click()
        cy.wait(time_ms)
        cy.log("Proceed with default selected test account number")
        //Default Test Account
        cy.url().should('include','/test-account/')
        cy.wait(time_ms)
        cy.get('[data-test-id="btn-submit-test-account"]').click()
        cy.wait(time_ms)
        cy.log("User is directed to project container page")
        cy.url().should('include','/project-container')
        cy.wait(time_ms)
        cy.scrollTo('bottom')
        cy.log("Click on Submit")
        cy.get('[data-test-id="btn-submit-summary"]').click()
        cy.wait(time_ms)
        cy.log("Project is submitted; Shows up in dashboard")
        cy.url().should('include',url+'/project-container/')
        cy.wait(time_ms)
        cy.log("Test Completed")

    })
})