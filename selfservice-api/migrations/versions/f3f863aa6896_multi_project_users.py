"""multi-project-users

Revision ID: f3f863aa6896
Revises: 1af8835de3a9
Create Date: 2020-01-22 16:39:01.141590

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import column, table

# revision identifiers, used by Alembic.
revision = 'f3f863aa6896'
down_revision = '1af8835de3a9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('project_users_association',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('project_id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('role', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.drop_constraint('project_manager_id_fkey', 'project', type_='foreignkey')
    op.drop_constraint('project_developer_id_fkey', 'project', type_='foreignkey')
    op.drop_constraint('project_cto_id_fkey', 'project', type_='foreignkey')
    op.drop_column('project', 'my_role')
    op.drop_column('project', 'manager_id')
    op.drop_column('project', 'cto_id')
    op.drop_column('project', 'developer_id')
    op.add_column('technical_req', sa.Column('no_of_test_account', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('technical_req', sa.Column('note_test_account', sa.Text(), nullable=True))

    scope_package = table('scope_package',
                          column('package_name', sa.String), column('description', sa.Text),
                          column('claim_names', sa.JSON), column('scope', sa.String))

    op.bulk_insert(
        scope_package,
        [
            {'package_name': 'Package 1', 'description': 'This package contains the following data:',
             'claim_names': ['Given name', 'Surname'], 'scope': 'openid profile'},
            {'package_name': 'Package 2', 'description': 'This package contains the following data:',
             'claim_names': ['Given name', 'Surname', 'E-mail address'], 'scope': 'openid profile email'},
            {'package_name': 'Package 3', 'description': 'This package contains the following data:',
             'claim_names': ['Given name', 'Surname', 'Address block (street address, locality, state or province, postal code, country)'],
             'scope': 'openid profile address'}
        ]
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('project', sa.Column('developer_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('project', sa.Column('cto_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('project', sa.Column('manager_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('project', sa.Column('my_role', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('project_cto_id_fkey', 'project', 'user', ['cto_id'], ['id'])
    op.create_foreign_key('project_developer_id_fkey', 'project', 'user', ['developer_id'], ['id'])
    op.create_foreign_key('project_manager_id_fkey', 'project', 'user', ['manager_id'], ['id'])
    op.drop_table('project_users_association')
    # ### end Alembic commands ###
